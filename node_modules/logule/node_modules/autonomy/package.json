{
  "author": {
    "name": "Eirik Albrigtsen",
    "email": "analsandblaster@gmail.com"
  },
  "name": "autonomy",
  "description": "Lightweight functional utility library complementing ES5",
  "version": "0.5.2",
  "stability": "stable",
  "repository": {
    "type": "git",
    "url": "git://github.com/clux/autonomy"
  },
  "keywords": [
    "utility",
    "functional",
    "haskell",
    "partial",
    "curry",
    "zipWith",
    "FP",
    "ES5"
  ],
  "main": "autonomy.js",
  "scripts": {
    "test": "nodeunit --reporter=verbose test/*.js",
    "coverage": "jscoverage autonomy.js && AUTONOMY_COV=1 nodeunit --reporter=lcov test",
    "coveralls": "npm run coverage | coveralls"
  },
  "dependencies": {},
  "devDependencies": {
    "nodeunit": "~0.9.0",
    "jscoverage": "~0.5.4",
    "coveralls": "~2.11.1",
    "operators": "latest"
  },
  "license": "MIT",
  "readme": "# Autonomy\n[![npm status](http://img.shields.io/npm/v/autonomy.svg)](https://www.npmjs.org/package/autonomy)\n[![build status](https://secure.travis-ci.org/clux/autonomy.svg)](http://travis-ci.org/clux/autonomy)\n[![dependency status](https://david-dm.org/clux/autonomy.svg)](https://david-dm.org/clux/autonomy)\n[![coverage status](http://img.shields.io/coveralls/clux/autonomy.svg)](https://coveralls.io/r/clux/autonomy)\n[![stable](http://img.shields.io/badge/stability-stable-74C614.svg)](http://nodejs.org/api/documentation.html#documentation_stability_index)\n\nAutonomy is a lightweight functional helper library. It is meant to complement an ES5 style with curried helpers, math helpers, curried accessors and higher order looping constructs.\n\nThese library is partly inspired by Haskell's [Prelude](http://www.haskell.org/ghc/docs/latest/html/libraries/base/Prelude.html), but its exports are optimized for JavaScript semantics and performance. It does not try to make JavaScript into something it's not.\n\n## Usage\nAttach it to the short variable of choice:\n\n```js\nvar $ = require('autonomy');\n```\n\nand get functional:\n\n```javascript\n$.id(x) === x;\n$.noop(x) === undefined;\n\nvar fn = $(fn1, fn2, fn3);\nfn(a); // fn3(fn2(fn1(a)))\n\n[1,3,2].map($.constant(5)); // [5, 5, 5]\n\n[1,2,3,4,3].filter($.elem([1,3])); // [ 1, 3, 3 ]\n\n[1,3,5,-1].some($.notElem([1,2,3,4,5])); // true\n\n$.gcd(10, 15); // 5\n\n[1,2,3,4,5,6].filter($.even); // [ 2, 4, 6 ]\n\n$.range(5); // [ 1, 2, 3, 4, 5 ]\n\n$.zip($.range(5), [1,2], [3,2,5]); // [ [ 1, 1, 3 ], [ 2, 2, 2 ] ]\n$.zipWith($.gcd, [5, 10, 15], $.range(5)); // [ 1, 2, 3 ]\n\n$.iterate(3, \"ha!\", function (str) {\n  return \"ha\" + str\n}); // [ 'ha!', 'haha!', 'hahaha!' ]\n\n[[1,2], [3,4]].map($.invoke('join','w')); // [ '1w2', '3w4']\n```\n\nRead the read the [API](https://github.com/clux/autonomy/blob/master/api.md).\n\nIn most cases the [operators](https://github.com/clux/operators) module provides some almost must have additions to autonomy.\n\n*This modules makes up the core part of the larger utility library*: [interlude](https://github.com/clux/interlude). If you find yourself co-using `operators` or `subset`, you should use `interlude` instead (there's also more documentation included for interlude).\n\n## Installation\n\n```bash\n$ npm install autonomy\n```\n\n## Running tests\nInstall development dependencies\n\n```bash\n$ npm install\n```\n\nRun the tests\n\n```bash\n$ npm test\n```\n\n## License\nMIT-Licensed. See LICENSE file for details.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/clux/autonomy/issues"
  },
  "homepage": "https://github.com/clux/autonomy",
  "_id": "autonomy@0.5.2",
  "_shasum": "25286e4f1b0093b8065ebf3eed8df49fdc344a84",
  "_from": "autonomy@~0.5",
  "_resolved": "https://registry.npmjs.org/autonomy/-/autonomy-0.5.2.tgz"
}
